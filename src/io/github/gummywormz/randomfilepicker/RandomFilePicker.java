/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package io.github.gummywormz.randomfilepicker;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author Paul Alves
 */
public class RandomFilePicker extends javax.swing.JFrame {

    ArrayList<String> filePaths;
    File temp;
    DefaultListModel<String> model = new DefaultListModel<>();
    Random r;
    /**
     * Creates new form RandomFilePicker
     */
    public RandomFilePicker() {
        initComponents();
        filePaths = new ArrayList<>();
        r = new Random();
        fileList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        includeSub = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        yesBtn = new javax.swing.JButton();
        noBtn = new javax.swing.JButton();
        selectFileChooser = new javax.swing.JFileChooser();
        addFileChooser = new javax.swing.JFileChooser();
        saveListChooser = new javax.swing.JFileChooser();
        openListChooser = new javax.swing.JFileChooser();
        programChooser = new javax.swing.JFileChooser();
        selectFolder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileList = new javax.swing.JList();
        extensions = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addFile = new javax.swing.JButton();
        delFile = new javax.swing.JButton();
        saveList = new javax.swing.JButton();
        openList = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        program = new javax.swing.JTextField();
        useDefault = new javax.swing.JCheckBox();
        prefix = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        programBtn = new javax.swing.JButton();
        pickFile = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();

        includeSub.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        includeSub.setTitle("Include Subfolders?");
        includeSub.setMinimumSize(new java.awt.Dimension(400, 100));
        includeSub.setResizable(false);

        jLabel3.setText("Include subfolders?");

        yesBtn.setText("Yes");
        yesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesBtnActionPerformed(evt);
            }
        });

        noBtn.setText("No");
        noBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout includeSubLayout = new javax.swing.GroupLayout(includeSub.getContentPane());
        includeSub.getContentPane().setLayout(includeSubLayout);
        includeSubLayout.setHorizontalGroup(
            includeSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(includeSubLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, includeSubLayout.createSequentialGroup()
                .addContainerGap(274, Short.MAX_VALUE)
                .addComponent(yesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        includeSubLayout.setVerticalGroup(
            includeSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(includeSubLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(includeSubLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesBtn)
                    .addComponent(noBtn))
                .addContainerGap())
        );

        selectFileChooser.setDialogTitle("Select a folder");
        selectFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        addFileChooser.setDialogTitle("Add a file");

        saveListChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveListChooser.setDialogTitle("Save List");
        saveListChooser.setFileFilter(new FileNameExtensionFilter("Text Files","txt"));
        saveListChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveListChooserActionPerformed(evt);
            }
        });

        openListChooser.setFileFilter(new FileNameExtensionFilter("Text Files","txt"));

        programChooser.setDialogTitle("Select a Program");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Random File Picker");
        setResizable(false);

        selectFolder.setText("Select Folder...");
        selectFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFolderActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(fileList);

        extensions.setToolTipText("Comma separated, no spaces or periods.");

        jLabel1.setText("Extensions (Comma Separated):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Random File Picker");

        addFile.setText("Add File...");
        addFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileActionPerformed(evt);
            }
        });

        delFile.setText("Remove File");
        delFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delFileActionPerformed(evt);
            }
        });

        saveList.setText("Save List...");
        saveList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveListActionPerformed(evt);
            }
        });

        openList.setText("Open List...");
        openList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openListActionPerformed(evt);
            }
        });

        jLabel4.setText("Program to Open:");

        useDefault.setText("Use Default");
        useDefault.setToolTipText("Runs the default associated program as if you double clicked on the file. NOTE: Prefix is ignored.");

        prefix.setToolTipText("Any commands to put in front of the file name. (i.e. -file FileName.nes or -pwad coolmod.pk3)");

        jLabel5.setText("Prefix:");

        programBtn.setText("Browse...");
        programBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programBtnActionPerformed(evt);
            }
        });

        pickFile.setText("Pick!");
        pickFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickFileActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(programBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(useDefault))
                            .addComponent(prefix, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(extensions, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(selectFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(openList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(214, 214, 214))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pickFile)
                        .addGap(298, 298, 298))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectFolder)
                        .addGap(18, 18, 18)
                        .addComponent(addFile)
                        .addGap(18, 18, 18)
                        .addComponent(delFile)
                        .addGap(18, 18, 18)
                        .addComponent(saveList)
                        .addGap(18, 18, 18)
                        .addComponent(openList)
                        .addGap(18, 18, 18)
                        .addComponent(clearBtn)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extensions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(useDefault)
                    .addComponent(programBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(pickFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFolderActionPerformed
          int returnVal = selectFileChooser.showOpenDialog(RandomFilePicker.this);
          if (returnVal == JFileChooser.APPROVE_OPTION)
          {
              temp = selectFileChooser.getSelectedFile();
              includeSub.setVisible(true);
          }
    }//GEN-LAST:event_selectFolderActionPerformed

    private void yesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesBtnActionPerformed
        String ext[] = extensions.getText().replaceAll("\\s+", "").split(",");
        if(extensions.getText().isEmpty()){ext = null;}
        Collection<File> files = FileUtils.listFiles(temp, ext, true);
        for (File f : files)
        {
            System.out.println(f.getAbsolutePath());
            filePaths.add(f.getAbsolutePath());
            model.addElement(f.getAbsolutePath());
        }
        includeSub.dispose();
    }//GEN-LAST:event_yesBtnActionPerformed

    private void noBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noBtnActionPerformed
        String ext[] = extensions.getText().replaceAll("\\s+", "").split(",");
        if(extensions.getText().isEmpty()){ext = null;}
        Collection<File> files = FileUtils.listFiles(temp, ext, false);
        for (File f : files)
        {
            filePaths.add(f.getAbsolutePath());
            model.addElement(f.getAbsolutePath());
        }
        includeSub.dispose();
    }//GEN-LAST:event_noBtnActionPerformed

    private void delFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delFileActionPerformed
        int index[] = fileList.getSelectedIndices();
        if (index.length == 0){return;}
        try{
        for (int i : index)
        {
            model.removeElementAt(i);
            filePaths.remove(i);
        }}catch (Exception e){}
    }//GEN-LAST:event_delFileActionPerformed

    private void addFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileActionPerformed
        int result = addFileChooser.showOpenDialog(RandomFilePicker.this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            model.addElement(addFileChooser.getSelectedFile().getAbsolutePath());
            filePaths.add(addFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_addFileActionPerformed

    private void programBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programBtnActionPerformed
        int result = programChooser.showOpenDialog(RandomFilePicker.this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            program.setText(programChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_programBtnActionPerformed

    private void pickFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickFileActionPerformed
        String fileToPick = filePaths.get(r.nextInt(filePaths.size()));
        if(useDefault.isSelected() && Desktop.isDesktopSupported())
        {
            Desktop d = Desktop.getDesktop();
            try {
                d.open(new File(fileToPick));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "File " + fileToPick + "was not found.", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            ArrayList<String> args = new ArrayList<>();
            args.add(program.getText());
            String[] args2 = prefix.getText().split(" ");
            args.addAll(Arrays.asList(args2));
            args.add(fileToPick);
            ProcessBuilder p = new ProcessBuilder(args);
            try {
                p.start();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "File " + fileToPick + " was not found or could not be opened.", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_pickFileActionPerformed

    private void saveListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveListActionPerformed
        int result = saveListChooser.showSaveDialog(RandomFilePicker.this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            try {
                FileWriter f = new FileWriter(saveListChooser.getSelectedFile());
                for(String s : filePaths)
                {
                    f.write(s);
                    f.write(System.lineSeparator());
                }
                f.flush();
                f.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Could not save file!", "Error!",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveListActionPerformed

    private void openListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openListActionPerformed
        int result = openListChooser.showOpenDialog(RandomFilePicker.this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            try {
                BufferedReader reader = new BufferedReader(new FileReader(openListChooser.getSelectedFile()));
                String ln1;
                while((ln1 = reader.readLine())!=null)
                {
                    filePaths.add(ln1);
                    model.addElement(ln1);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Could not open file!", "Error!",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openListActionPerformed

    private void saveListChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveListChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveListChooserActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        filePaths.clear();
        model.clear();
    }//GEN-LAST:event_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RandomFilePicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RandomFilePicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RandomFilePicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RandomFilePicker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RandomFilePicker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFile;
    private javax.swing.JFileChooser addFileChooser;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton delFile;
    private javax.swing.JTextField extensions;
    private javax.swing.JList fileList;
    private javax.swing.JDialog includeSub;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton noBtn;
    private javax.swing.JButton openList;
    private javax.swing.JFileChooser openListChooser;
    private javax.swing.JButton pickFile;
    private javax.swing.JTextField prefix;
    private javax.swing.JTextField program;
    private javax.swing.JButton programBtn;
    private javax.swing.JFileChooser programChooser;
    private javax.swing.JButton saveList;
    private javax.swing.JFileChooser saveListChooser;
    private javax.swing.JFileChooser selectFileChooser;
    private javax.swing.JButton selectFolder;
    private javax.swing.JCheckBox useDefault;
    private javax.swing.JButton yesBtn;
    // End of variables declaration//GEN-END:variables
}
